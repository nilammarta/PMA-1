<?php
require_once __DIR__ . "/../includes/pma-db.php";
require_once __DIR__ . "/common-action.php";
require_once __DIR__ . "/json-helper.php";

global $PDO;
session_start();

/**
 * @param $persons
 * @return int
 * function to generated id of person
 */
function generateId($persons): int
{
    if ($persons == null){
        $id = 1;
    }else{
        $lastPerson = $persons[count($persons) - 1];
        $id = $lastPerson["id"] + 1;
    }
    return $id;
}

/**
 * ['nik'] => [
 *   'max' => 'Panjang karakter tidak boleh lebih dari x',
 *   'duplicate' => 'NIK sudah ada'
 * ],
 * ['email'] => [
 *   'format' => 'Format tidak sesuai'
 * ]
 *tampung error yang terjadi pada inputan form
 *
 * @param $nik
 * @param $password
 * @param $email
 * @return array
 */
function validate(string $nik, string $password, string $confirmPassword, string $email, string $birthDate):array
{
    $validate = [];
    if (checkNik($nik) == null) {
        $validate['nik'] = "Please type the correct NIK, at least 16 characters and only numeric NIK is allowed!";
    }

    if (isNikExits($nik, null) == true) {
        $validate['nik'] = "NIK is already exists in database!";
    }

    if (newPasswordValidate($password, $confirmPassword) != null){
        $validate['password'] = newPasswordValidate($password, $confirmPassword);
    }

    if (isEmailExists($email, null) == true) {
        $validate['email'] = "Email address is already exists in database!";
    }

    if (checkFormatEmail($email) == null) {
        $validate['email'] = "Email format is not correct!";
    }

    $timestamp = convertStringIntoDate('Y-m-d', $birthDate);
    if (time() < $timestamp || $timestamp == null){
        $validate['birthDate'] = "Birth Date is not correct!";
    }

    return $validate;
}

/**
 * @return int => of personID
 * function to save new person data
 */
function saveData(array $dataInput, $PDO):void
{
////    $persons = getPersonsData();
//    if ($dataInput['internalNotes'] == ""){
//        $internalNotes = null;
//    }else {
//        $internalNotes = $dataInput['internalNotes'];
//    }
//    $newPerson = [
////        "id" => generateId($persons),
//        "firstName" => ucfirst($dataInput['firstName']),
//        "lastName" => ucfirst($dataInput['lastName']),
//        "nik" => $dataInput['nik'],
//        "email" => $dataInput['email'],
//        "password" => encryptPassword($dataInput['password']),
//        "birthDate" =>convertStringIntoDate('Y-m-d', $dataInput['birthDate']),
//        "sex" => $dataInput['sex'],
//        "address" => $dataInput['address'],
//        "internalNotes" => $internalNotes,
//        "role" => $dataInput['role'],
//        "alive" => convertSwitchValue($dataInput['alive']),
//        "lastLoggedIn" => null
//    ];

    try {
        // we omit inserting value for 'id' column here because it is an autogenerated primary key column
        $query     = 'INSERT INTO Persons(first_name, last_name, nik, email, password, birth_date, sex, address, internal_notes, role, alive, last_logged_in) 
        VALUES(:first_name, :last_name, :nik, :email, :password, :birth_date, :sex, :address, 
               :internal_notes, :role, :alive, :last_logged_in)';
        $statement = $PDO->prepare( $query );
        $statement->execute( array(
            "first_name" => ucfirst($dataInput['firstName']),
            "last_name" => ucfirst($dataInput['lastName']),
            "nik" => $dataInput['nik'],
            "email" => $dataInput['email'],
            "password" => encryptPassword($dataInput['password']),
            "birth_date" => convertStringIntoDate('Y-m-d', $dataInput['birthDate']),
            "sex" => $dataInput['sex'],
            "address" => $dataInput['address'],
            "internal_notes" => ucfirst($dataInput['internalNotes']),
            "role" => $dataInput['role'],
            "alive" => convertSwitchValue($dataInput['alive']),
            "last_logged_in" => null
        ) );
        $_SESSION['info'] = "New person data has been saved!";
    } catch ( PDOException $e ) {
        $_SESSION['error'] = 'Query error: ' . $e->getMessage();
        header( 'Location: ../create.php?error=1' );
        die();
    }

//    $persons [] = $newPerson;
//    saveDataIntoJson($persons);
//    return $newPerson['id'];
}

$errorData = validate($_POST['nik'], $_POST['password'], $_POST['confirmPassword'], $_POST['email'], $_POST['birthDate']);
if (count($errorData) != 0){

    $_SESSION['errorData'] = $errorData;
    $_SESSION['dataInput'] = inputData();
    $_SESSION['birthDate'] = $_POST['birthDate'];

    header("Location: ../create.php");
    exit();
}else{
    unset($_SESSION['errorData']);
    unset($_SESSION['dataInput']);

    $dataInput = inputData();
    $nikInput = inputData()['nik'];
//    $personId = saveData(inputData());
    saveData($dataInput, $PDO);
    $query = 'SELECT ID FROM Persons WHERE nik = :nik';
    $statement = $PDO->prepare($query);
    $statement->execute(array("nik" => $nikInput));
    $personId = $statement->fetch(PDO::FETCH_ASSOC);
//    if ($personsId != null) {
//        redirect("../view.php", "page=1&person=" . $personId . "&saved=1");
//    }
    redirect("../view.php", "page=1&person=" . $personId['ID']);
}
